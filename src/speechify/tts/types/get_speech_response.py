# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from .get_speech_response_audio_format import GetSpeechResponseAudioFormat
from .speech_marks import SpeechMarks
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class GetSpeechResponse(UniversalBaseModel):
    audio_data: str = pydantic.Field()
    """
    Synthesized speech audio, Base64-encoded
    """

    audio_format: GetSpeechResponseAudioFormat = pydantic.Field()
    """
    The format of the audio data
    """

    billable_characters_count: int = pydantic.Field()
    """
    The number of billable characters processed in the request.
    """

    speech_marks: SpeechMarks

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
